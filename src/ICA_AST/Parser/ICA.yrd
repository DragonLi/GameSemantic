{
open GS.ICA.AST
}

[<Start>]
program : p1=block DOUBLEBAR p2=program { Par (p1, p2) }
         |i=block {i}

block : p1=stmt SEMI p2=block { Seq (p1, p2) }
       | i=stmt{ i }

stmt :
     TRUE {True} | FALSE {False} | n=NUM {Num (int n)}
   | SKIP {Skip}
   | i=IDENT {Var i}
   | LAMBDA i1=IDENT DOT p=program { Lambda (Var i1, p) }
   | p1=program LBR p2=program RBR { App (p1, p2) }
   | p1=stmt op=BINOP p2=program { Expr (p1, p2, op) }
   | IF cond=program THEN p1=program ELSE p2=program { If (cond, p1, p2)}
   | NEW i=IDENT IN p=program { New (Var i, p) }
   | BANG p=program { Deref p }
   | i=IDENT ASSG p=program { Assg (Var i, p) }
   | SEMAPHORE i=IDENT IN p=program  { Sem (Var i, p) }
   | GRAB i=IDENT {Grab (Var i) }
   | RELEASE i=IDENT {Release (Var i)}
   | FIX p=program {Fix p}
   | LBR p=program RBR {p}


